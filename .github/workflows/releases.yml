name: "create release"

on:
 workflow_dispatch:
  inputs:
   v:
    required: true
    description: version tag
    type: string
   pre:
    required: true
    description: pre-release
    default: false
    type: boolean 
   skipTest:
    description: skip-test
    type: boolean 
    default: false
    required: false

jobs:
  loadTest:
    uses: ./.github/workflows/loadTest.yml
  build-libLoader-msvc-4-windows:
    runs-on: windows-latest
    steps:
    - name: checkout  
      uses: actions/checkout@v2
    - name: configure
      env:
        cc: gcc
        cxx: g++
      run: mkdir cpp/build && cd cpp/build && cmake -DGOOGLE_TEST=OFF ..
    - name: build with gcc
      run: cd ./cpp && cmake --build build --target generateSingleHeaders && cmake --build build --config Release --target Loader
    - name: upload
      uses: actions/upload-artifact@v3
      with:
        name: libLoaderdll
        path: ./cpp/build/Release/libLoader.dll
  build-libLoader-gcc-4-linux:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: configure
      env:
        cc: gcc
        cxx: g++
      run: mkdir cpp/build && cd cpp/build && cmake -DCMAKE_BUILD_TYPE=Release -DGOOGLE_TEST=OFF ..
    - name: build with gcc
      run: cd cpp/build && make generateSingleHeaders && make Loader
    - name: upload
      uses: actions/upload-artifact@v3
      with:
        name: libLoaderso
        path: ./cpp/build/libLoader.so
  push-single-include-2-template:
    runs-on: ubuntu-latest
    steps:
     - name: checkout
       uses: actions/checkout@v2
       with:
        ref: dev
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        path: main
     - name: checkout
       uses: actions/checkout@v2
       with:
        path: template
        repository: Nambers/MiraiCP-template
        ref: main
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
     - name: generate single headers
       env: 
         cc: gcc
         cxx: g++
       run: cd main && mkdir cpp/build && cd cpp/build && cmake -DGOOGLE_TEST=OFF .. && make generateSingleHeaders
     - name: replace single header(1/2)
       run: cat main/cpp/src/single_include/MiraiCP/MiraiCP.hpp > template/single_include/MiraiCP/MiraiCP.hpp
     - name: replace single header(2/2)
       run: cat main/cpp/src/single_include/MiraiCP/MiraiCP.cpp > template/single_include/MiraiCP/MiraiCP.cpp
     - name: mv
       run: mv ./template/.git ./.git
     - name: Push
       uses: s0/git-publish-subdir-action@develop 
       env:
         REPO: git@github.com:Nambers/MiraiCP-template.git
         BRANCH: main # The branch name where you want to push the assets
         FOLDER: ./template # The directory where your assets are generated
         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
         MESSAGE: ${{ github.event.inputs.v }} # The commit message
    
  publish-release:
    if: ${{ github.event.inputs.skipTest }}
    needs: loadTest
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: permission
      run: chmod -R 777 *
    - name: Set up JDK 15
      uses: actions/setup-java@v2
      with:
        java-version: '15'
        distribution: 'adopt'
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
    - name: Build plugin
      run:  cd ./kotlin/ && ./gradlew MiraiCP-plugin:buildPlugin --warning-mode all --info --stacktrace
    - name: Build loader
      run:  cd ./kotlin/ && ./gradlew MiraiCP-loader:shadowJar --warning-mode all --info --stacktrace
    - name: get change log
      run: "grep -n -i \"## v\" CHANGELOG.md | head -n2 | cut -d: -f1 >> line.tmp"
    - name: get change log2
      run: cat CHANGELOG.md | head -n $((`tail -n 1 line.tmp`-1)) | tail -n +`head -n 1 line.tmp` >> release.log
    - name: show
      run: cat release.log
    - uses: actions/download-artifact@v3
      with:
        name: libLoaderdll
        path: ./
    - uses: actions/download-artifact@v3
      with:
        name: libLoaderso
        path: ./
    - name: Create Release
      uses: ncipollo/release-action@v1.8.6
      with:
          artifacts: ./kotlin/loader/build/libs/MiraiCP-loader-*.jar,./kotlin/plugin/build/mirai/MiraiCP-plugin-*.mirai2.jar,./libLoader.dll,./libLoader.so
          bodyfile: release.log
          tag: ${{ github.event.inputs.v }}
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ github.event.inputs.pre }}
